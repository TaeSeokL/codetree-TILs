if __name__=='__main__':
    n = int(input())        # n 격자크기
    board = [list(map(int,input().split())) for _ in range(n)]  # 초기 먼지 정보

    dir = [(0, -1), (1, 0), (0, 1), (-1, 0)]  # 방향 (좌 하 우 상)
    # 방향에 따른 비율 처리를 위한 위치 업데이트 인덱싱
    rate = [[(-1,1,1),(-2,0,2),(-1,0,7),(-1,-1,10),(0,-2,5),(1,1,1),(2,0,2),(1,0,7),(1,-1,10),(0,-1)],
            [(-1,-1,1),(0,-2,2),(0,-1,7),(1,-1,10),(2,0,5),(-1,1,1),(0,2,2),(0,1,7),(1,1,10),(1,0)],
            [(-1,-1,1),(-2,0,2),(-1,0,7),(-1,1,10),(0,2,5),(1,-1,1),(2,0,2),(1,0,7),(1,1,10),(0,1)],
            [(1,-1,1),(0,-2,2),(0,-1,7),(-1,-1,10),(-2,0,5),(1,1,1),(0,2,2),(0,1,7),(-1,1,10),(-1,0)]]

    # --토네이도 처리를 위한 초기화
    y, x = n // 2, n // 2
    cnt = 0
    max_cnt = 1
    flag = 0
    d = 0
    ans = 0             # 정답변수

    while True:
        # [1] 토네이도 이동
        cnt += 1
        y, x = y + dir[d][0], x + dir[d][1]

        # [2] 종료 여부 확인 후 먼지 처리
        if x == -1:
            break

        ori_dust = board[y][x]      # 원래 먼지 양 저장
        m_dust = 0                  # 마지막 a비율 처리를 위한 변수 : 다른 곳으로 이동한 먼지를 모두 더하는 변수
        board[y][x] = 0             # 원래 위치 먼지 모두 제거

        # 비율에 따라 먼지 배분
        for i in range(10):
            if i == 9:                          # 마지막 따로 처리 : a비율 처리
                dy, dx = rate[d][i]
                yy, xx = y + dy, x + dx
                r_dust = ori_dust - m_dust      # 원본 먼지 - 다른 곳으로 옮겨간 먼지

                if 0<=yy<n and 0<=xx<n:
                    board[yy][xx] += r_dust
                else:
                    ans += r_dust
            else:                               # 비율에 맞게 처리하는 곳들
                dy, dx, r = rate[d][i]          # 비율과 위치 업뎃 인덱스 가져오기
                yy, xx = y + dy, x + dx
                r_dust = ori_dust * r // 100    # 옮길 먼지양 구하기
                m_dust += r_dust                # 누적해주기

                if 0<=yy<n and 0<=xx<n:         # 범위내일경우 : 그곳에 먼지 보내기
                    board[yy][xx] += r_dust
                else:
                    ans += r_dust               # 아닐때 정답에 누적

        # [3] 토네이도 처리
        if cnt == max_cnt:
            cnt = 0
            d = (d+1)%4

            if flag == 1:
                max_cnt += 1
                flag = 0
            else:
                flag = 1

    print(ans)